package Utility;

import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;

import java.util.Properties;

import javax.imageio.ImageIO;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;




public class LaunchDriver {
	static WebDriver driver = new ChromeDriver();

	public static void launchbrowser() {
		System.setProperty("webdriver.chrome.driver", "src/main/java/BrowserStack/Demo/WebDriver/ChromeDriver.exe");

		driver.manage().window().maximize();

		driver.get("https://elpais.com/");
	}

	public static void main(String[] args) throws InterruptedException, MalformedURLException {
		launchbrowser();
		navigateToOpinion();
		getFirstFiveArticle();
	}

	public static void navigateToOpinion() {
		driver.findElement(By.xpath("//button[contains(@id,'agree-button')]")).click();
		driver.findElement(By.xpath("//div[@data-dtm-region='portada_menu']//a[@href='https://elpais.com/opinion/']"))
				.click();
	}

	public static void getFirstFiveArticle() throws InterruptedException, MalformedURLException {
		List<WebElement> articlelist = driver.findElements(By.xpath("//h2//a"));
		ArrayList<String> hreflink = new ArrayList();

		Path imageDirectory = Paths.get("src/main/java/Images");

		for (int i = 0; i < 5; i++) {
			hreflink.add(articlelist.get(i).getDomAttribute("href"));
		}
		int imageCount = 1;
		for (String link : hreflink) {

			driver.get(link);
			Thread.sleep(3000);

			try {
//	printing title
				System.out.println("Title - " + driver.findElement(By.xpath("//h1")).getText());

//		printing content
				System.out.println("Content - " + driver.findElement(By.xpath("//h1//ancestor::article//p")).getText());

//		Image sacing
				String SrcUrl = driver.findElement(By.xpath("//h1//ancestor::header//img")).getDomAttribute("src");
				System.out.println("image url - " + SrcUrl);

				URL imageUrl = new URL(SrcUrl);

				Path outputPath = imageDirectory.resolve("image_" + imageCount + ".jpg");
				InputStream in = imageUrl.openStream();
				FileOutputStream out = new FileOutputStream(outputPath.toFile());
				byte[] buffer = new byte[4096];
				int bytesRead;
				while ((bytesRead = in.read(buffer)) != -1) {
					out.write(buffer, 0, bytesRead);
				}
				System.out.println("Downloaded image " + imageCount + " to " + outputPath.toString());
				imageCount++;
			} catch (NoSuchElementException | IOException Exception) {

			}

		}
	}
	
	public static void textTranslate() {
		RestAssured.baseURI = "https://demoqa.com/BookStore/v1/Books"; 
		RequestSpecification request = RestAssured.given();
	}
}
